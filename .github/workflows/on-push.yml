name: on-push

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - uses: pre-commit/action@v3.0.1

  combine-environments:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install conda-merge
      run: |
        python -m pip install conda-merge
    - name: Combine environments
      run: |
        for SUFFIX in ci integration; do
        conda-merge ci/environment-$SUFFIX.yml environment.yml > ci/combined-environment-$SUFFIX.yml || exit
        done
    - uses: actions/upload-artifact@v4
      with:
        name: combined-environments
        path: ci/combined-environment-*.yml

  unit-tests:
    name: unit-tests
    needs: combine-environments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Get current date
      id: date
      run: echo "date=$(date +%Y-%m-%d)" >> "${GITHUB_OUTPUT}"
    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: ci/combined-environment-ci.yml
        environment-name: DEVELOP
        cache-environment: true
        cache-environment-key: environment-${{ steps.date.outputs.date }}
        cache-downloads-key: downloads-${{ steps.date.outputs.date }}
        create-args: >-
          python=${{ matrix.python-version }}
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Run tests
      run: |
        make unit-tests COV_REPORT=xml

  type-check:
    needs: [combine-environments, unit-tests]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Get current date
      id: date
      run: echo "date=$(date +%Y-%m-%d)" >> "${GITHUB_OUTPUT}"
    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: ci/combined-environment-ci.yml
        environment-name: DEVELOP
        cache-environment: true
        cache-environment-key: environment-${{ steps.date.outputs.date }}
        cache-downloads-key: downloads-${{ steps.date.outputs.date }}
        create-args: >-
          python=3.11
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Run code quality checks
      run: |
        make type-check

  e2e-tests:
    name: e2e-tests
    needs: [combine-environments, unit-tests]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Get current date
      id: date
      run: echo "date=$(date +%Y-%m-%d)" >> "${GITHUB_OUTPUT}"
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: ci/combined-environment-ci.yml
        environment-name: DEVELOP
        cache-environment: true
        cache-environment-key: environment-${{ steps.date.outputs.date }}
        cache-downloads-key: downloads-${{ steps.date.outputs.date }}
        create-args: >-
          python=3.11
    - name: Install Chrome for Selenium
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Install Playwright browsers
      run: |
        python -m playwright install --with-deps
    - name: Run E2E tests
      run: |
        xvfb-run -a python -m pytest -m e2e -v --headless --html=e2e-report.html --self-contained-html
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: |
          e2e-report.html
          htmlcov/

  docs-build:
    needs: [combine-environments, unit-tests]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Get current date
      id: date
      run: echo "date=$(date +%Y-%m-%d)" >> "${GITHUB_OUTPUT}"
    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: ci/combined-environment-ci.yml
        environment-name: DEVELOP
        cache-environment: true
        cache-environment-key: environment-${{ steps.date.outputs.date }}
        cache-downloads-key: downloads-${{ steps.date.outputs.date }}
        create-args: >-
          python=3.11
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Build documentation
      run: |
        make docs-build
        # create docs in html/
      # From https://github.com/marketplace/actions/sphinx-build
    - uses: actions/upload-pages-artifact@v3
      with:
        path: docs/_build/html/

  # Deployment job.
  deploy:
    needs: docs-build

    # Deploy only when the main branch is pushed.
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment.
    permissions:
      contents: read
      pages: write # To deploy to Pages.
      id-token: write # To verify the deployment originates from an appropriate source.

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
